{
    "scopeName": "source.vdf",
    "patterns": [
        {
            "comment": "single line comment",
            "match": "//.*",
            "name": "comment.line.txt"
        },
        {
            "comment": "Ability Special Variable",
            "match": "%[^\\s]*",
            "name": "variable.parameter"
        },
        {
            "comment": "A group of other sections or KV pairs",
            "match": "^\\s*(?!\".*?\"\\s*\".*?\")\".*?\"",
            "name": "support.class"
        },
        {
            "comment": "A group of KV pairs without quote",
            "match": "^\\s*(\\S*)\\s*{$",
            "captures": {
                "1": {
                    "name": "support.class"
                }
            }
        },
        {
            "comment": "A group of 3 KV pairs without quote",
            "match": "\\s*(\\S*)\\s*(\\S*)\\s*{",
            "captures": {
                "1": {
                    "name": "support.class"
                },
                "2": {
                    "name": "constant.numeric"
                }
            }
        },
        {
            "comment": "{",
            "match": "\\s*{"
        },
        {
            "comment": "}",
            "match": "\\s*}"
        },
        {
            "comment": "A key value pair",
            "match": "(\".*?\")\\s*(\".*?\")",
            "name": "entity.name.tag.txt",
            "captures": {
                "1": {
                    "name": "entity.name.tag.txt"
                },
                "2": {
                    "name": "string.quoted.txt"
                }
            }
        },
        {
            "comment": "A key value pair(no quote)",
            "match": "^\\s*(\\S*)\\s*(\\S*)$",
            "captures": {
                "1": {
                    "name": "entity.name.tag.txt"
                },
                "2": {
                    "name": "string.quoted.txt"
                }
            }
        },
        {
            "comment": "A QC 3 key value pair(no quote)",
            "match": "^\\s*(\\S*)\\s*(\\S*)\\s*(\".*?\")$",
            "captures": {
                "1": {
                    "name": "entity.name.tag.txt"
                },
                "2": {
                    "name": "constant.numeric"
                },
                "3": {
                    "name": "string.quoted.txt"
                }
            }
        }
    ]
}